services:
  todo-mongo-production:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    container_name: todo_mongo_production

  todo-redis-production:
    image: redis
    command: ['redis-server', '--appendonly', 'yes'] 
    volumes:
      - ./todo-backend/redis_data:/data
    container_name: todo_redis_production 

  backend_dev_nginx:
    build:
      context: ./todo-backend 
      dockerfile: dev.Dockerfile 
    volumes:
      - ./todo-backend/:/usr/src/app 
    environment: 
      - MONGO_URL=mongodb://the_username:the_password@todo-mongo-production:27017/the_database
      - REDIS_URL=redis://todo-redis-production:6379
    depends_on:
      - todo-mongo-production
      - todo-redis-production
    container_name: back-dev-nginx # This will name the container back-dev


  frontend-production:
    build:
      context: ./todo-frontend 
      dockerfile: Dockerfile 
    volumes:
      - ./todo-frontend/:/usr/src/app 
    container_name: todo_frontend_production 

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:   
      - frontend-production
      - backend_dev_nginx # wait for the backend container to be started